{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PRO\\\\Documents\\\\React\\\\flow\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './styles/style.css';\nimport LowerObstacles from './components/LowerObstacles';\nimport UpperObstacles from './components/UpperObstacles';\nimport Player from './components/Player';\nimport Score from './components/Score';\nimport useInterval from './useInterval';\nimport gameOverSad from './images/sad.png';\nimport { ImSad } from 'react-icons/im';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet score;\n\nfunction App() {\n  _s();\n\n  const [playerCoordinates, setPlayerCoordinates] = useState();\n  const [gameOver, setGameOver] = useState(false);\n\n  function updateScore() {\n    score = score + 10;\n  } //Only update score if gameOver is false\n\n\n  if (gameOver != false) {\n    useInterval(updateScore, 5000);\n  }\n\n  const getPlayerCoordinates = coordinates => {\n    setPlayerCoordinates(coordinates);\n  };\n\n  const getLowerObstaclesCoordinates = coordinates => {\n    for (let i = 0; i < coordinates.length; i++) {\n      if (playerCoordinates[0] == undefined) {} else {\n        if (playerCoordinates[0][1] == coordinates[i][1] && 100 - playerCoordinates[0][0] <= coordinates[i][0]) {\n          setGameOver(true);\n        }\n      }\n    }\n  };\n\n  const getUpperObstaclesCoordinates = coordinates => {\n    for (let i = 0; i < coordinates.length; i++) {\n      //console.log(\"\"+coordinates[i][1]);\n      if (playerCoordinates[0] == undefined) {} else {\n        //console.log(\"\"+playerCoordinates[0][1])\n        if (playerCoordinates[0][1] == coordinates[i][1] && playerCoordinates[0][0] < coordinates[i][0]) {\n          // console.log(\"Collision\")\n          setGameOver(true);\n        }\n      }\n    }\n  };\n\n  function resetGame() {\n    setGameOver(false);\n  }\n\n  const gameView = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas\",\n    children: [/*#__PURE__*/_jsxDEV(UpperObstacles, {\n      onUpdate: getUpperObstaclesCoordinates,\n      score: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LowerObstacles, {\n      onUpdate: getLowerObstaclesCoordinates,\n      score: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Player, {\n      onPlayerMove: getPlayerCoordinates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this);\n\n  const gameOverView = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameOver\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Game Over\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ImSad, {\n      size: 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Score 200\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetGame,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 26\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [gameOver ? gameOverView : gameView, /*#__PURE__*/_jsxDEV(Score, {\n      score: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Rvt07betx1j53bIAebMTIYz6bhU=\", false, function () {\n  return [useInterval];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","LowerObstacles","UpperObstacles","Player","Score","useInterval","gameOverSad","ImSad","score","App","playerCoordinates","setPlayerCoordinates","gameOver","setGameOver","updateScore","getPlayerCoordinates","coordinates","getLowerObstaclesCoordinates","i","length","undefined","getUpperObstaclesCoordinates","resetGame","gameView","gameOverView"],"sources":["C:/Users/PRO/Documents/React/flow/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './styles/style.css'\r\nimport LowerObstacles from './components/LowerObstacles'\r\nimport UpperObstacles from './components/UpperObstacles'\r\nimport Player from './components/Player'\r\nimport Score from './components/Score'\r\nimport useInterval from './useInterval'\r\nimport gameOverSad  from './images/sad.png'\r\nimport {ImSad} from 'react-icons/im'\r\n\r\nlet score \r\n\r\nfunction App() {\r\n    const [playerCoordinates,setPlayerCoordinates] = useState() \r\n    const [gameOver,setGameOver] = useState(false)\r\n    function updateScore(){\r\n      score = score+10\r\n    }\r\n    \r\n    //Only update score if gameOver is false\r\n    if(gameOver!=false){\r\n      useInterval(updateScore,5000)\r\n    }\r\n    \r\n    const getPlayerCoordinates =(coordinates)=>{\r\n      setPlayerCoordinates(coordinates)\r\n    }\r\n\r\n    const getLowerObstaclesCoordinates =(coordinates)=>{\r\n      for(let i=0; i<coordinates.length; i++){\r\n        if(playerCoordinates[0]== undefined){}\r\n        else{\r\n          if(playerCoordinates[0][1]== coordinates[i][1] && (100-playerCoordinates[0][0])<=coordinates[i][0]){\r\n           setGameOver(true)\r\n             \r\n          }\r\n        }\r\n      } \r\n    }\r\n\r\n    const getUpperObstaclesCoordinates =(coordinates)=>{\r\n      for(let i=0; i<coordinates.length; i++){\r\n        //console.log(\"\"+coordinates[i][1]);\r\n        if(playerCoordinates[0]== undefined){}\r\n        else{\r\n          //console.log(\"\"+playerCoordinates[0][1])\r\n          if(playerCoordinates[0][1]== coordinates[i][1] && playerCoordinates[0][0]<coordinates[i][0]){\r\n            // console.log(\"Collision\")\r\n            setGameOver(true)\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    function resetGame(){\r\n      setGameOver(false)\r\n    }\r\n\r\n    const gameView = \r\n     (<div className=\"canvas\">\r\n      <UpperObstacles onUpdate={getUpperObstaclesCoordinates} score={score}/>\r\n      <LowerObstacles onUpdate={getLowerObstaclesCoordinates} score={score}/>\r\n      <Player onPlayerMove={getPlayerCoordinates}/>\r\n      </div>\r\n     )\r\n    \r\n    const gameOverView =(<div className=\"gameOver\">\r\n          <h1>Game Over</h1>\r\n          <ImSad size={50}/>\r\n          <h2>Score 200</h2>\r\n          <button onClick={resetGame}>New Game</button>\r\n      </div>)\r\n    return (\r\n    <div className=\"main\">\r\n      {gameOver? gameOverView : gameView}\r\n    <Score score={score}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module"}