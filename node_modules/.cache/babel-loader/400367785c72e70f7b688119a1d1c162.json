{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PRO\\\\Documents\\\\React\\\\flow\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './styles/style.css';\nimport LowerObstacles from './components/LowerObstacles';\nimport UpperObstacles from './components/UpperObstacles';\nimport Player from './components/Player';\nimport Score from './components/Score';\nimport useInterval from './useInterval'; //var playerCoordinates = []\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [playerCoordinates, setPlayerCoordinates] = useState();\n  const [count, setCount] = useState(0);\n\n  function timed() {\n    setCount(item => item + 1); // console.log(count)\n  }\n\n  useInterval(timed, 1000);\n\n  const getPlayerCoordinates = coordinates => {\n    //console.log(\"\"+coordinates);\n    //playerCoordinates = coordinates\n    setPlayerCoordinates(coordinates);\n  };\n\n  const getLowerObstaclesCoordinates = coordinates => {\n    for (let i = 0; i < coordinates.length; i++) {\n      //console.log(\"\"+coordinates[i][1]);\n      if (playerCoordinates[0] == undefined) {} else {\n        //console.log(\"\"+playerCoordinates[0][1])\n        if (playerCoordinates[0][1] == coordinates[i][1] && playerCoordinates[0][0] >= coordinates[i][0]) {\n          console.log(\"Collision\");\n        }\n      }\n    }\n  };\n\n  const getUpperObstaclesCoordinates = coordinates => {\n    for (let i = 0; i < coordinates.length; i++) {\n      //console.log(\"\"+coordinates[i][1]);\n      if (playerCoordinates[0] == undefined) {} else {\n        //console.log(\"\"+playerCoordinates[0][1])\n        if (playerCoordinates[0][1] == coordinates[i][1] && playerCoordinates[0][0] < coordinates[i][0]) {// console.log(\"Collision\")\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas\",\n      children: [/*#__PURE__*/_jsxDEV(LowerObstacles, {\n        onUpdate: getLowerObstaclesCoordinates\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Player, {\n        onPlayerMove: getPlayerCoordinates\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Score, {\n      score: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Vh4Wm4MnuQKLuDvIeuT9P6FUOic=\", false, function () {\n  return [useInterval];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","LowerObstacles","UpperObstacles","Player","Score","useInterval","App","playerCoordinates","setPlayerCoordinates","count","setCount","timed","item","getPlayerCoordinates","coordinates","getLowerObstaclesCoordinates","i","length","undefined","console","log","getUpperObstaclesCoordinates"],"sources":["C:/Users/PRO/Documents/React/flow/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './styles/style.css'\r\nimport LowerObstacles from './components/LowerObstacles'\r\nimport UpperObstacles from './components/UpperObstacles'\r\nimport Player from './components/Player'\r\nimport Score from './components/Score'\r\nimport useInterval from './useInterval'\r\n\r\n//var playerCoordinates = []\r\n\r\nfunction App() {\r\n    const [playerCoordinates,setPlayerCoordinates] = useState() \r\n    const [count, setCount] = useState(0)\r\n    function timed(){\r\n      \r\n      setCount((item)=> item+1)\r\n     // console.log(count)\r\n    }\r\n    useInterval(timed,1000)\r\n\r\n    const getPlayerCoordinates =(coordinates)=>{\r\n      //console.log(\"\"+coordinates);\r\n      //playerCoordinates = coordinates\r\n      setPlayerCoordinates(coordinates)\r\n    }\r\n\r\n    const getLowerObstaclesCoordinates =(coordinates)=>{\r\n      for(let i=0; i<coordinates.length; i++){\r\n        //console.log(\"\"+coordinates[i][1]);\r\n        if(playerCoordinates[0]== undefined){}\r\n        else{\r\n          //console.log(\"\"+playerCoordinates[0][1])\r\n          if(playerCoordinates[0][1]== coordinates[i][1] && playerCoordinates[0][0]>=coordinates[i][0]){\r\n             console.log(\"Collision\")\r\n          }\r\n        }\r\n      } \r\n    }\r\n\r\n    \r\n    \r\n    const getUpperObstaclesCoordinates =(coordinates)=>{\r\n      for(let i=0; i<coordinates.length; i++){\r\n        //console.log(\"\"+coordinates[i][1]);\r\n        if(playerCoordinates[0]== undefined){}\r\n        else{\r\n          //console.log(\"\"+playerCoordinates[0][1])\r\n          if(playerCoordinates[0][1]== coordinates[i][1] && playerCoordinates[0][0]<coordinates[i][0]){\r\n            // console.log(\"Collision\")\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    return (\r\n    <div className=\"main\">\r\n    <div className=\"canvas\">\r\n    <LowerObstacles onUpdate={getLowerObstaclesCoordinates}/>\r\n    <Player onPlayerMove={getPlayerCoordinates}/>\r\n    </div>\r\n    <Score score={count}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,oBAAP;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CAEA;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACX,MAAM,CAACC,iBAAD,EAAmBC,oBAAnB,IAA2CR,QAAQ,EAAzD;EACA,MAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CAAD,CAAlC;;EACA,SAASW,KAAT,GAAgB;IAEdD,QAAQ,CAAEE,IAAD,IAASA,IAAI,GAAC,CAAf,CAAR,CAFc,CAGf;EACA;;EACDP,WAAW,CAACM,KAAD,EAAO,IAAP,CAAX;;EAEA,MAAME,oBAAoB,GAAGC,WAAD,IAAe;IACzC;IACA;IACAN,oBAAoB,CAACM,WAAD,CAApB;EACD,CAJD;;EAMA,MAAMC,4BAA4B,GAAGD,WAAD,IAAe;IACjD,KAAI,IAAIE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,WAAW,CAACG,MAA3B,EAAmCD,CAAC,EAApC,EAAuC;MACrC;MACA,IAAGT,iBAAiB,CAAC,CAAD,CAAjB,IAAuBW,SAA1B,EAAoC,CAAE,CAAtC,MACI;QACF;QACA,IAAGX,iBAAiB,CAAC,CAAD,CAAjB,CAAqB,CAArB,KAA0BO,WAAW,CAACE,CAAD,CAAX,CAAe,CAAf,CAA1B,IAA+CT,iBAAiB,CAAC,CAAD,CAAjB,CAAqB,CAArB,KAAyBO,WAAW,CAACE,CAAD,CAAX,CAAe,CAAf,CAA3E,EAA6F;UAC1FG,OAAO,CAACC,GAAR,CAAY,WAAZ;QACF;MACF;IACF;EACF,CAXD;;EAeA,MAAMC,4BAA4B,GAAGP,WAAD,IAAe;IACjD,KAAI,IAAIE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,WAAW,CAACG,MAA3B,EAAmCD,CAAC,EAApC,EAAuC;MACrC;MACA,IAAGT,iBAAiB,CAAC,CAAD,CAAjB,IAAuBW,SAA1B,EAAoC,CAAE,CAAtC,MACI;QACF;QACA,IAAGX,iBAAiB,CAAC,CAAD,CAAjB,CAAqB,CAArB,KAA0BO,WAAW,CAACE,CAAD,CAAX,CAAe,CAAf,CAA1B,IAA+CT,iBAAiB,CAAC,CAAD,CAAjB,CAAqB,CAArB,IAAwBO,WAAW,CAACE,CAAD,CAAX,CAAe,CAAf,CAA1E,EAA4F,CAC1F;QACD;MACF;IACF;EACF,CAXD;;EAcA,oBACA;IAAK,SAAS,EAAC,MAAf;IAAA,wBACA;MAAK,SAAS,EAAC,QAAf;MAAA,wBACA,QAAC,cAAD;QAAgB,QAAQ,EAAED;MAA1B;QAAA;QAAA;QAAA;MAAA,QADA,eAEA,QAAC,MAAD;QAAQ,YAAY,EAAEF;MAAtB;QAAA;QAAA;QAAA;MAAA,QAFA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAKA,QAAC,KAAD;MAAO,KAAK,EAAEJ;IAAd;MAAA;MAAA;MAAA;IAAA,QALA;EAAA;IAAA;IAAA;IAAA;EAAA,QADA;AASH;;GAtDQH,G;UAQLD,W;;;KARKC,G;AAwDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}