{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PRO\\\\Documents\\\\React\\\\flow\\\\src\\\\components\\\\LowerObstacles.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport '../styles/style.css';\nimport useInterval from '../useInterval';\nimport GridItem from './GridItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet obstacleCount = 6;\n\nfunction LowerObstacles() {\n  _s();\n\n  const [obstacle, setObstacle] = useState([]);\n  const [dummyState, setDummyState] = useState(1);\n\n  function moveObstacles() {\n    let tempStore = obstacle;\n\n    for (let i = 0; i < tempStore.length; i++) {\n      tempStore[i][1] = tempStore[i][1] - (obstacleCount - 1);\n    }\n\n    setDummyState(item => item + 1);\n    setObstacle(tempStore);\n  }\n\n  function generateObstacles() {\n    let tempStore = obstacle;\n    const random = Math.random() * 60;\n    let height = Math.floor(random / 10) * 10 + 10;\n\n    if (tempStore.length < obstacleCount) {\n      tempStore.push([height, 95]);\n    } else {\n      tempStore.push([height, 100 - (obstacleCount - 1)]);\n      tempStore.shift();\n    }\n\n    setDummyState(item => item - 1);\n    setObstacle(tempStore);\n  }\n\n  useInterval(moveObstacles, 1000);\n  useInterval(generateObstacles, 4000);\n  const obstacleView = obstacle.map(item => {\n    let top = 100 - item[0];\n    const obstacleStyle = {\n      height: `${item[0]}%`,\n      top: `${top}%`,\n      left: `${item[1]}%`\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"obstacle\",\n      style: obstacleStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }, this);\n  });\n  console.log(\"Down: \", obstacle);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: obstacleView\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LowerObstacles, \"9xTvAeGhUBCGRNp9WnLLy5Za6H8=\", false, function () {\n  return [useInterval, useInterval];\n});\n\n_c = LowerObstacles;\nexport default LowerObstacles;\n\nvar _c;\n\n$RefreshReg$(_c, \"LowerObstacles\");","map":{"version":3,"names":["React","useEffect","useState","useInterval","GridItem","obstacleCount","LowerObstacles","obstacle","setObstacle","dummyState","setDummyState","moveObstacles","tempStore","i","length","item","generateObstacles","random","Math","height","floor","push","shift","obstacleView","map","top","obstacleStyle","left","console","log"],"sources":["C:/Users/PRO/Documents/React/flow/src/components/LowerObstacles.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport '../styles/style.css'\r\nimport useInterval from '../useInterval'\r\nimport GridItem from './GridItem'\r\n\r\nlet obstacleCount = 6\r\n\r\nfunction LowerObstacles() {\r\n    \r\n    const [obstacle, setObstacle] = useState([])\r\n    const [dummyState, setDummyState] = useState(1)\r\n    function moveObstacles(){\r\n        let tempStore = obstacle\r\n        for (let i = 0; i<tempStore.length; i++){\r\n          tempStore[i][1] = tempStore[i][1]-(obstacleCount-1)\r\n        }\r\n        setDummyState((item)=> item+1);\r\n        setObstacle(tempStore)\r\n      }\r\n  \r\n    function generateObstacles(){\r\n      let tempStore = obstacle\r\n      const random = Math.random()*60\r\n      let height = (Math.floor(random/10)*10)+10\r\n  \r\n      if(tempStore.length<obstacleCount){      \r\n        tempStore.push([height,95])\r\n        }\r\n      else{\r\n        tempStore.push([height,(100-(obstacleCount-1))])\r\n        tempStore.shift()\r\n      }\r\n      setDummyState((item)=> item-1);\r\n      setObstacle(tempStore)\r\n    }\r\n  \r\n    useInterval(moveObstacles,1000)\r\n    useInterval(generateObstacles,4000 )\r\n  \r\n    const obstacleView = obstacle.map((item)=>{\r\n      let top = 100 -item[0]\r\n      const obstacleStyle = {\r\n        height: `${item[0]}%`,\r\n        top: `${top}%`,\r\n        left: `${item[1]}%`\r\n      }\r\n      return( <div className=\"obstacle\" style={obstacleStyle}></div>)\r\n    })\r\n    \r\n    console.log(\"Down: \",obstacle)\r\n  \r\n    return (\r\n    <div>\r\n        {obstacleView}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LowerObstacles"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,qBAAP;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,IAAIC,aAAa,GAAG,CAApB;;AAEA,SAASC,cAAT,GAA0B;EAAA;;EAEtB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,CAAD,CAA5C;;EACA,SAASS,aAAT,GAAwB;IACpB,IAAIC,SAAS,GAAGL,QAAhB;;IACA,KAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAACD,SAAS,CAACE,MAA5B,EAAoCD,CAAC,EAArC,EAAwC;MACtCD,SAAS,CAACC,CAAD,CAAT,CAAa,CAAb,IAAkBD,SAAS,CAACC,CAAD,CAAT,CAAa,CAAb,KAAiBR,aAAa,GAAC,CAA/B,CAAlB;IACD;;IACDK,aAAa,CAAEK,IAAD,IAASA,IAAI,GAAC,CAAf,CAAb;IACAP,WAAW,CAACI,SAAD,CAAX;EACD;;EAEH,SAASI,iBAAT,GAA4B;IAC1B,IAAIJ,SAAS,GAAGL,QAAhB;IACA,MAAMU,MAAM,GAAGC,IAAI,CAACD,MAAL,KAAc,EAA7B;IACA,IAAIE,MAAM,GAAID,IAAI,CAACE,KAAL,CAAWH,MAAM,GAAC,EAAlB,IAAsB,EAAvB,GAA2B,EAAxC;;IAEA,IAAGL,SAAS,CAACE,MAAV,GAAiBT,aAApB,EAAkC;MAChCO,SAAS,CAACS,IAAV,CAAe,CAACF,MAAD,EAAQ,EAAR,CAAf;IACC,CAFH,MAGI;MACFP,SAAS,CAACS,IAAV,CAAe,CAACF,MAAD,EAAS,OAAKd,aAAa,GAAC,CAAnB,CAAT,CAAf;MACAO,SAAS,CAACU,KAAV;IACD;;IACDZ,aAAa,CAAEK,IAAD,IAASA,IAAI,GAAC,CAAf,CAAb;IACAP,WAAW,CAACI,SAAD,CAAX;EACD;;EAEDT,WAAW,CAACQ,aAAD,EAAe,IAAf,CAAX;EACAR,WAAW,CAACa,iBAAD,EAAmB,IAAnB,CAAX;EAEA,MAAMO,YAAY,GAAGhB,QAAQ,CAACiB,GAAT,CAAcT,IAAD,IAAQ;IACxC,IAAIU,GAAG,GAAG,MAAKV,IAAI,CAAC,CAAD,CAAnB;IACA,MAAMW,aAAa,GAAG;MACpBP,MAAM,EAAG,GAAEJ,IAAI,CAAC,CAAD,CAAI,GADC;MAEpBU,GAAG,EAAG,GAAEA,GAAI,GAFQ;MAGpBE,IAAI,EAAG,GAAEZ,IAAI,CAAC,CAAD,CAAI;IAHG,CAAtB;IAKA,oBAAQ;MAAK,SAAS,EAAC,UAAf;MAA0B,KAAK,EAAEW;IAAjC;MAAA;MAAA;MAAA;IAAA,QAAR;EACD,CARoB,CAArB;EAUAE,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBtB,QAArB;EAEA,oBACA;IAAA,UACKgB;EADL;IAAA;IAAA;IAAA;EAAA,QADA;AAKH;;GAjDQjB,c;UA6BLH,W,EACAA,W;;;KA9BKG,c;AAmDT,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}