{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PRO\\\\Documents\\\\React\\\\flow\\\\src\\\\components\\\\UpperObstacles.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport '../styles/style.css';\nimport useInterval from '../useInterval';\nimport GridItem from './GridItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet count = 0;\n\nfunction UpperObstacles() {\n  _s();\n\n  let currentSpeed = 700;\n  let obstacleCount = 5;\n  const [obstacle, setObstacle] = useState([]);\n\n  function moveObstacles() {\n    let tempStore = Array.from(obstacle);\n\n    for (let i = 0; i < tempStore.length; i++) {\n      tempStore[i][1] = tempStore[i][1] - obstacleCount;\n    }\n\n    setObstacle(tempStore);\n  }\n\n  function generateObstacles() {\n    let tempStore = Array.from(obstacle);\n    const random = Math.random() * 50;\n    let height = Math.floor(random / 10) * 10 + 20;\n\n    if (tempStore.length <= obstacleCount) {\n      tempStore.push([height, 95]);\n    } else {\n      tempStore.push([height, 100 - obstacleCount]);\n      tempStore.shift();\n    }\n\n    setObstacle(tempStore);\n  }\n\n  useInterval(moveObstacles, currentSpeed);\n  useInterval(generateObstacles, currentSpeed * 4);\n  const obstacleView = obstacle.map(item => {\n    let color;\n    let bottom = 100 - item[0];\n    const obstacleStyle = {\n      height: `${item[0]}%`,\n      bottom: `${bottom}%`,\n      left: `${item[1]}%`\n    };\n\n    switch (item[0]) {\n      case 20:\n        color = \"#87FF3C\";\n        break;\n\n      case 30:\n        color = \"#FF55EE\";\n        break;\n\n      case 40:\n        color = \"#4332FF\";\n        break;\n\n      case 50:\n        color = \"#00FF91\";\n        break;\n\n      case 60:\n        color = \"#FF002F\";\n        break;\n    }\n\n    const gridStyle = {\n      backgroundColor: color\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"obstacle\",\n      style: obstacleStyle,\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        style: gridStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 63\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }, this);\n  }); // console.log(\"Up: \",obstacle)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: obstacleView\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpperObstacles, \"PQxX58fGo0c49FML1N7LRZcPxrg=\", false, function () {\n  return [useInterval, useInterval];\n});\n\n_c = UpperObstacles;\nexport default UpperObstacles;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpperObstacles\");","map":{"version":3,"names":["React","useEffect","useState","useInterval","GridItem","count","UpperObstacles","currentSpeed","obstacleCount","obstacle","setObstacle","moveObstacles","tempStore","Array","from","i","length","generateObstacles","random","Math","height","floor","push","shift","obstacleView","map","item","color","bottom","obstacleStyle","left","gridStyle","backgroundColor"],"sources":["C:/Users/PRO/Documents/React/flow/src/components/UpperObstacles.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport '../styles/style.css'\r\nimport useInterval from '../useInterval'\r\nimport GridItem from './GridItem'\r\n\r\nlet count = 0\r\n\r\nfunction UpperObstacles() {\r\n    let currentSpeed = 700\r\n    let obstacleCount = 5\r\n    const [obstacle, setObstacle] = useState([])\r\n    \r\n    function moveObstacles(){\r\n        let tempStore = Array.from(obstacle)\r\n        for (let i = 0; i<tempStore.length; i++){\r\n          tempStore[i][1] = tempStore[i][1]-(obstacleCount)\r\n        }\r\n        setObstacle(tempStore)\r\n      }\r\n  \r\n    function generateObstacles(){\r\n      let tempStore = Array.from(obstacle)\r\n      const random = Math.random()*50\r\n      let height = (Math.floor(random/10)*10)+20\r\n  \r\n      if(tempStore.length<=obstacleCount){      \r\n        tempStore.push([height,95])\r\n       \r\n      }\r\n      else{\r\n        tempStore.push([height,(100-(obstacleCount))])\r\n        tempStore.shift()\r\n      }\r\n      setObstacle(tempStore)\r\n    }\r\n\r\n  \r\n    useInterval(moveObstacles,currentSpeed)\r\n    useInterval(generateObstacles,currentSpeed*4)\r\n  \r\n    const obstacleView = obstacle.map((item)=>{\r\n      let color\r\n      let bottom = 100 -item[0]\r\n      const obstacleStyle = {\r\n        height: `${item[0]}%`,\r\n        bottom: `${bottom}%`,\r\n        left: `${item[1]}%`\r\n      }\r\n\r\n      switch(item[0]){\r\n        case 20:\r\n            color= \"#87FF3C\"\r\n            break;\r\n        case 30:\r\n          color = \"#FF55EE\"\r\n          break;\r\n        case 40:\r\n          color= \"#4332FF\"\r\n          break;\r\n        case 50:\r\n          color = \"#00FF91\"\r\n          break;\r\n        case 60:\r\n          color = \"#FF002F\"\r\n          break;\r\n           \r\n      }\r\n\r\n      const gridStyle = {\r\n        backgroundColor: color \r\n      }\r\n\r\n      return( <div className=\"obstacle\" style={obstacleStyle}><GridItem style={gridStyle}/></div>)\r\n    })\r\n  \r\n     // console.log(\"Up: \",obstacle)\r\n    return (\r\n    <div>\r\n        {obstacleView}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpperObstacles"],"mappings":"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"},"metadata":{},"sourceType":"module"}